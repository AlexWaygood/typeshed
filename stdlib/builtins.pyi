import collections.abc  # noqa: F401
import typing_extensions  # noqa: F401
from typing import MutableMapping, MutableSequence, Sequence, TypeVar  # noqa: Y022

_T = TypeVar("_T")
_T_co = TypeVar("_T_co", covariant=True)
_KT = TypeVar("_KT")
_VT = TypeVar("_VT")

class object: ...
class staticmethod: ...
class classmethod: ...
class type: ...
class function: ...
class property: ...
class ellipsis: ...
class BaseException: ...
class int: ...
class float: ...
class bytes(Sequence[int]): ...
class bool(int): ...
class slice: ...
class str(Sequence[str]): ...
class list(MutableSequence[_T]): ...
class tuple(Sequence[_T_co]): ...
class dict(MutableMapping[_KT, _VT]): ...

Ellipsis: ellipsis
