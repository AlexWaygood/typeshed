from importlib.abc import Traversable
from types import ModuleType
from typing import BinaryIO, TextIO
from typing_extensions import TypeAlias

Package: TypeAlias = str | ModuleType
Resource: TypeAlias = str

def open_binary(package: Package, resource: Resource) -> BinaryIO: ...
def open_text(package: Package, resource: Resource, encoding: str = "utf-8", errors: str = "strict") -> TextIO: ...
def read_binary(package: Package, resource: Resource) -> bytes: ...
def read_text(package: Package, resource: Resource, encoding: str = "utf-8", errors: str = "strict") -> str: ...
def files(anchor: Package | None = ...) -> Traversable: ...

from importlib.abc import ResourceReader as ResourceReader
