from typing import Any, Callable, TypeVar

_FuncT = TypeVar("_FuncT", bound=Callable[..., Any])

# These definitions have special processing in mypy
class ABCMeta(type):
    def __new__(__mcls, __name: str, __bases: tuple[type, ...], __namespace: dict[str, Any], **kwargs: Any) -> ABCMeta: ...
    def __instancecheck__(cls: ABCMeta, instance: Any) -> bool: ...
    def __subclasscheck__(cls: ABCMeta, subclass: type) -> bool: ...

def abstractmethod(funcobj: _FuncT) -> _FuncT: ...
